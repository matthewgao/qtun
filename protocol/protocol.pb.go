// Code generated by protoc-gen-go. DO NOT EDIT.
// source: protocol.proto

package protocol

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Envelope struct {
	// Types that are valid to be assigned to Type:
	//	*Envelope_Ping
	//	*Envelope_Packet
	Type                 isEnvelope_Type `protobuf_oneof:"type"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *Envelope) Reset()         { *m = Envelope{} }
func (m *Envelope) String() string { return proto.CompactTextString(m) }
func (*Envelope) ProtoMessage()    {}
func (*Envelope) Descriptor() ([]byte, []int) {
	return fileDescriptor_2bc2336598a3f7e0, []int{0}
}
func (m *Envelope) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Envelope.Unmarshal(m, b)
}
func (m *Envelope) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Envelope.Marshal(b, m, deterministic)
}
func (m *Envelope) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Envelope.Merge(m, src)
}
func (m *Envelope) XXX_Size() int {
	return xxx_messageInfo_Envelope.Size(m)
}
func (m *Envelope) XXX_DiscardUnknown() {
	xxx_messageInfo_Envelope.DiscardUnknown(m)
}

var xxx_messageInfo_Envelope proto.InternalMessageInfo

type isEnvelope_Type interface {
	isEnvelope_Type()
}

type Envelope_Ping struct {
	Ping *MessagePing `protobuf:"bytes,1,opt,name=ping,proto3,oneof"`
}

type Envelope_Packet struct {
	Packet *MessagePacket `protobuf:"bytes,2,opt,name=packet,proto3,oneof"`
}

func (*Envelope_Ping) isEnvelope_Type() {}

func (*Envelope_Packet) isEnvelope_Type() {}

func (m *Envelope) GetType() isEnvelope_Type {
	if m != nil {
		return m.Type
	}
	return nil
}

func (m *Envelope) GetPing() *MessagePing {
	if x, ok := m.GetType().(*Envelope_Ping); ok {
		return x.Ping
	}
	return nil
}

func (m *Envelope) GetPacket() *MessagePacket {
	if x, ok := m.GetType().(*Envelope_Packet); ok {
		return x.Packet
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*Envelope) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _Envelope_OneofMarshaler, _Envelope_OneofUnmarshaler, _Envelope_OneofSizer, []interface{}{
		(*Envelope_Ping)(nil),
		(*Envelope_Packet)(nil),
	}
}

func _Envelope_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*Envelope)
	// type
	switch x := m.Type.(type) {
	case *Envelope_Ping:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Ping); err != nil {
			return err
		}
	case *Envelope_Packet:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Packet); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("Envelope.Type has unexpected type %T", x)
	}
	return nil
}

func _Envelope_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*Envelope)
	switch tag {
	case 1: // type.ping
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(MessagePing)
		err := b.DecodeMessage(msg)
		m.Type = &Envelope_Ping{msg}
		return true, err
	case 2: // type.packet
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(MessagePacket)
		err := b.DecodeMessage(msg)
		m.Type = &Envelope_Packet{msg}
		return true, err
	default:
		return false, nil
	}
}

func _Envelope_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*Envelope)
	// type
	switch x := m.Type.(type) {
	case *Envelope_Ping:
		s := proto.Size(x.Ping)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Envelope_Packet:
		s := proto.Size(x.Packet)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

type MessagePing struct {
	Timestamp            int64    `protobuf:"varint,1,opt,name=Timestamp,proto3" json:"Timestamp,omitempty"`
	LocalAddr            string   `protobuf:"bytes,2,opt,name=LocalAddr,proto3" json:"LocalAddr,omitempty"`
	LocalPrivateAddr     string   `protobuf:"bytes,3,opt,name=LocalPrivateAddr,proto3" json:"LocalPrivateAddr,omitempty"`
	IP                   string   `protobuf:"bytes,4,opt,name=IP,proto3" json:"IP,omitempty"`
	DC                   string   `protobuf:"bytes,5,opt,name=DC,proto3" json:"DC,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MessagePing) Reset()         { *m = MessagePing{} }
func (m *MessagePing) String() string { return proto.CompactTextString(m) }
func (*MessagePing) ProtoMessage()    {}
func (*MessagePing) Descriptor() ([]byte, []int) {
	return fileDescriptor_2bc2336598a3f7e0, []int{1}
}
func (m *MessagePing) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MessagePing.Unmarshal(m, b)
}
func (m *MessagePing) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MessagePing.Marshal(b, m, deterministic)
}
func (m *MessagePing) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MessagePing.Merge(m, src)
}
func (m *MessagePing) XXX_Size() int {
	return xxx_messageInfo_MessagePing.Size(m)
}
func (m *MessagePing) XXX_DiscardUnknown() {
	xxx_messageInfo_MessagePing.DiscardUnknown(m)
}

var xxx_messageInfo_MessagePing proto.InternalMessageInfo

func (m *MessagePing) GetTimestamp() int64 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

func (m *MessagePing) GetLocalAddr() string {
	if m != nil {
		return m.LocalAddr
	}
	return ""
}

func (m *MessagePing) GetLocalPrivateAddr() string {
	if m != nil {
		return m.LocalPrivateAddr
	}
	return ""
}

func (m *MessagePing) GetIP() string {
	if m != nil {
		return m.IP
	}
	return ""
}

func (m *MessagePing) GetDC() string {
	if m != nil {
		return m.DC
	}
	return ""
}

type MessagePacket struct {
	Payload              []byte   `protobuf:"bytes,1,opt,name=payload,proto3" json:"payload,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MessagePacket) Reset()         { *m = MessagePacket{} }
func (m *MessagePacket) String() string { return proto.CompactTextString(m) }
func (*MessagePacket) ProtoMessage()    {}
func (*MessagePacket) Descriptor() ([]byte, []int) {
	return fileDescriptor_2bc2336598a3f7e0, []int{2}
}
func (m *MessagePacket) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MessagePacket.Unmarshal(m, b)
}
func (m *MessagePacket) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MessagePacket.Marshal(b, m, deterministic)
}
func (m *MessagePacket) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MessagePacket.Merge(m, src)
}
func (m *MessagePacket) XXX_Size() int {
	return xxx_messageInfo_MessagePacket.Size(m)
}
func (m *MessagePacket) XXX_DiscardUnknown() {
	xxx_messageInfo_MessagePacket.DiscardUnknown(m)
}

var xxx_messageInfo_MessagePacket proto.InternalMessageInfo

func (m *MessagePacket) GetPayload() []byte {
	if m != nil {
		return m.Payload
	}
	return nil
}

func init() {
	proto.RegisterType((*Envelope)(nil), "Envelope")
	proto.RegisterType((*MessagePing)(nil), "MessagePing")
	proto.RegisterType((*MessagePacket)(nil), "MessagePacket")
}

func init() { proto.RegisterFile("protocol.proto", fileDescriptor_2bc2336598a3f7e0) }

var fileDescriptor_2bc2336598a3f7e0 = []byte{
	// 242 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x2b, 0x28, 0xca, 0x2f,
	0xc9, 0x4f, 0xce, 0xcf, 0xd1, 0x03, 0x33, 0x94, 0x12, 0xb8, 0x38, 0x5c, 0xf3, 0xca, 0x52, 0x73,
	0xf2, 0x0b, 0x52, 0x85, 0x94, 0xb8, 0x58, 0x0a, 0x32, 0xf3, 0xd2, 0x25, 0x18, 0x15, 0x18, 0x35,
	0xb8, 0x8d, 0x78, 0xf4, 0x7c, 0x53, 0x8b, 0x8b, 0x13, 0xd3, 0x53, 0x03, 0x32, 0xf3, 0xd2, 0x3d,
	0x18, 0x82, 0xc0, 0x72, 0x42, 0x1a, 0x5c, 0x6c, 0x05, 0x89, 0xc9, 0xd9, 0xa9, 0x25, 0x12, 0x4c,
	0x60, 0x55, 0x7c, 0x70, 0x55, 0x60, 0x51, 0x0f, 0x86, 0x20, 0xa8, 0xbc, 0x13, 0x1b, 0x17, 0x4b,
	0x49, 0x65, 0x41, 0xaa, 0xd2, 0x54, 0x46, 0x2e, 0x6e, 0x24, 0x93, 0x84, 0x64, 0xb8, 0x38, 0x43,
	0x32, 0x73, 0x53, 0x8b, 0x4b, 0x12, 0x73, 0x0b, 0xc0, 0x56, 0x31, 0x07, 0x21, 0x04, 0x40, 0xb2,
	0x3e, 0xf9, 0xc9, 0x89, 0x39, 0x8e, 0x29, 0x29, 0x45, 0x60, 0x2b, 0x38, 0x83, 0x10, 0x02, 0x42,
	0x5a, 0x5c, 0x02, 0x60, 0x4e, 0x40, 0x51, 0x66, 0x59, 0x62, 0x49, 0x2a, 0x58, 0x11, 0x33, 0x58,
	0x11, 0x86, 0xb8, 0x10, 0x1f, 0x17, 0x93, 0x67, 0x80, 0x04, 0x0b, 0x58, 0x96, 0xc9, 0x33, 0x00,
	0xc4, 0x77, 0x71, 0x96, 0x60, 0x85, 0xf0, 0x5d, 0x9c, 0x95, 0x34, 0xb9, 0x78, 0x51, 0x9c, 0x2e,
	0x24, 0xc1, 0xc5, 0x5e, 0x90, 0x58, 0x99, 0x93, 0x9f, 0x98, 0x02, 0x76, 0x16, 0x4f, 0x10, 0x8c,
	0xeb, 0x24, 0x1c, 0x25, 0x98, 0x9b, 0x5a, 0x9c, 0x91, 0x94, 0x59, 0x94, 0xa2, 0x0f, 0x0b, 0xbf,
	0x24, 0x36, 0x30, 0xcb, 0x18, 0x10, 0x00, 0x00, 0xff, 0xff, 0x2f, 0x7d, 0x15, 0x9a, 0x52, 0x01,
	0x00, 0x00,
}
